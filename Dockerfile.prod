# pull official base image
FROM python:3.8-alpine
LABEL MAINTAINER="Brian Arriaga brian.arriaga@gmail.com"

# set system-wide environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV DJANGO_SETTINGS_MODULE app.settings.production
ENV WEB_CONCURRENCY 3
ENV REACT_APP_DJANGO_SERVER https://django-rental-movie-app.herokuapp.com/api/
ENV NODE_OPTIONS --openssl-legacy-provider

# Install system dependencies
RUN apk update && \
    apk add --update bash curl nodejs yarn postgresql-client jpeg-dev libjpeg && \
    apk add --virtual .tmp-build-deps \
      gcc libc-dev linux-headers postgresql-dev musl-dev \
      zlib zlib-dev python3-dev libffi-dev openssl-dev cargo

# set work directory
RUN mkdir /app
WORKDIR /app

# Install Python dependencies
COPY ./requirements.txt .
RUN pip install --upgrade pip && \
    pip install -r requirements.txt && \
    apk del .tmp-build-deps

# copy front end to compile it
COPY ./frontend /app
# Install front-end dependencies.
RUN yarn install && \
    yarn build:prod

# back to the main directory
WORKDIR /app

# copy project
COPY ./backend /app

# make static and media root
RUN mkdir -p /vol/web/media && \
    mkdir -p /vol/web/static

# Install assets
RUN python manage.py collectstatic --noinput --clear

EXPOSE $PORT
